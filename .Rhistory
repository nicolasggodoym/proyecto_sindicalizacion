TRUE ~ NA_character_)),
ciuo = factor(case_when(ciuo == 2 ~ "1. Altos cargos públicos",
ciuo == 3 ~ "2. Profesionales",
ciuo == 4 ~ "3. Técnicos y profesionales niv. medio",
ciuo == 5 ~ "4. Empleados de oficina",
ciuo == 6 ~ "5. Trab. servicios y comercio",
ciuo == 7 ~ "6. Agricultores y calificados",
ciuo == 8 ~ "7. Oficiales, operarios y artesanos",
ciuo == 9 ~ "8. Operadores y montadores",
ciuo == 10 ~ "9. Trab. no calificados",
TRUE ~ NA_character_)),
private_sector = car::recode(.$cise, c("c(1,2,5,6,7) = 1;
c(3,4) = 0;
c(8,9) = NA"),
as.factor = T),
salaried_selfempl = car::recode(.$cise, c("c(2,3,4,5,6,7) = 1;
c(1) = 0;
c(8,9) = NA"),
as.factor = T),
salaried = car::recode(.$cise, c("c(3,4,5,6,7) = 1;
c(1,2) = 0;
c(8,9) = NA"),
as.factor = T),
year = 2015) %>%
select(-c(starts_with("p_")))
# 2017 --------------------------------------------------------------------
c17 = c17 %>%
select(id = folio,
exp = expr,
strat = varstrat,
unit = varunit,
edad,
gender = sexo,
married = ecivil,
educ,
unionized =  r6,
p_sind = o24a,
p_func = o24b,
p_grem = o24c,
p_col = o24d,
income = y1,
subcontracted = o20,
contract_type = o18,
contract = o17,
contract_duration = o16,
company_size = o23,
rama = rama1,
ciuo = oficio1,
cise = o15,
pco1) %>%
mutate_at(vars(everything(), -company_size), ~as.numeric(.)) %>%
mutate(gender = car::recode(.$gender, c("1 = 'Male';
2 = 'Female'"), as.factor = T),
married = car::recode(.$married, c("c(1,2,3) = '1';
c(4,5,6,7,8,9) = '0'"), as.factor = T),
educ = car::recode(.$educ, c("c(0,1,2,3,4) = '1. Incomplete secondary or less';
c(5,6) = '2. Secondary complete';
c(7,8,9) = '3. Technical degree (completed) or incomplete tertiary';
c(10,11,12) = '4. Completed tertiary or more';
99 = NA")),
unionized =  factor(case_when(unionized == 12 ~ "1",
!unionized %in% c(12, 99) &  !is.na(unionized) ~ "0",
TRUE ~ NA_character_)),
unionized2 = factor(case_when(if_any(starts_with("p_"), ~ . == 1) ~ "1",
if_any(starts_with("p_"), ~ . == 2) ~ "0",
TRUE ~ NA_character_)),
contract = car::recode(.$contract, c("c(1,2) = '1';
3 = '0';
c(4,9) = NA"),
as.factor = T),
contract_duration = car::recode(.$contract_duration, c("1 = '1';
2 = '0';
9 = NA"),
as.factor = T),
contract_type = case_when(contract_type %in% c(1,3) ~ "1",
contract_type == 2 ~ "2",
TRUE ~ NA_character_),
company_size = car::recode(.$company_size, c("c('A', 'B', 'C') = '1. Micro';
'D' = '2. Pequeña';
'E' = '3. Mediana';
'F' = '4. Grande';
c('X', '') = NA"),
as.factor = T),
income_log = log(income),
rama = factor(case_when(rama %in% c(1,2) ~ "1. Agricultura, ganadería, silvicultura y pesca",
rama == 3 ~ "2. Minería",
rama == 4 ~ "3. Industrias manufactureras",
rama == 5 ~ "4. Suministro de electricidad, gas y agua",
rama == 6 ~ "5. Construcción",
rama %in% c(7,8) ~ "6. Comercio, hoteles y restaurantes",
rama == 9 ~ "7. Transporte y comunicaciones",
rama %in% c(10,11) ~ "8. Servicios financieros, inmobiliarios y empresariales",
rama %in% c(12,13,14,15,16,17) ~ "9. Servicios sociales, domésticos, profesionales y otros",
TRUE ~ NA_character_)),
ciuo = factor(case_when(ciuo == 2 ~ "1. Altos cargos públicos",
ciuo == 3 ~ "2. Profesionales",
ciuo == 4 ~ "3. Técnicos y profesionales niv. medio",
ciuo == 5 ~ "4. Empleados de oficina",
ciuo == 6 ~ "5. Trab. servicios y comercio",
ciuo == 7 ~ "6. Agricultores y calificados",
ciuo == 8 ~ "7. Oficiales, operarios y artesanos",
ciuo == 9 ~ "8. Operadores y montadores",
ciuo == 10 ~ "9. Trab. no calificados",
TRUE ~ NA_character_)),
private_sector = car::recode(.$cise, c("c(1,2,5,6,7) = 1;
c(3,4) = 0;
c(8,9) = NA"),
as.factor = T),
salaried_selfempl = car::recode(.$cise, c("c(2,3,4,5,6,7) = 1;
c(1) = 0;
c(8,9) = NA"),
as.factor = T),
salaried = car::recode(.$cise, c("c(3,4,5,6,7) = 1;
c(1,2) = 0;
c(8,9) = NA"),
as.factor = T),
year = 2017) %>%
select(-c(starts_with("p_")))
saveRDS(c00 ,"output/data/c00.rds")
saveRDS(c03 ,"output/data/c03.rds")
saveRDS(c13 ,"output/data/c13.rds")
saveRDS(c15 ,"output/data/c15.rds")
saveRDS(c17 ,"output/data/c17.rds")
data = bind_rows(c00,c03,c13,c15,c17)
rm(c00,c03,c13,c15,c17)
saveRDS(data, "output/data/data.rds")
rm(list=ls())
# Análisis descriptivo CASEN general --------------------------------------
# Cargar paquetes ---------------------------------------------------------
pacman::p_load(tidyverse,
sjmisc,
sjPlot,
ggplot2,
survey,
srvyr)
# Cargar datos ------------------------------------------------------------
data = readRDS("output/data/data.rds")
# Crear gráficos ----------------------------------------------------------
a = data %>%
filter(salaried == 1 & private_sector == 1) %>%
select(id, exp, strat, year, unionized) %>%
na.omit() %>%
as_survey_design(#ids = unit,
strata = strat,
weights = exp)
a %>%
group_by(year, unionized) %>%
summarise(per = survey_prop(na.rm = T)) %>%
filter(unionized == "1") %>%
mutate(per = per*100) %>%
ggplot(aes(year, y = per)) +
geom_line() +
geom_point() +
geom_label(aes(label = round(per,3))) +
scale_x_continuous(breaks = c(2000, 2003, 2013, 2015, 2017)) +
scale_y_continuous(limits = c(0, 3), n.breaks = 8) +
labs(title = "Unionized (2003-2017)",
x = "Año", y = "%")
ggsave("output/img/unionized.jpeg", dpi = 500)
a = data %>%
filter(salaried == 1 & private_sector == 1) %>%
select(id, exp, strat, unit, year, unionized2) %>%
na.omit() %>%
as_survey_design(ids = unit,
strata = strat,
weights = exp)
a %>%
group_by(year, unionized2) %>%
summarise(per = survey_prop(na.rm = T)) %>%
filter(unionized2 == "1") %>%
mutate(per = per*100) %>%
ggplot(aes(year, y = per)) +
geom_line() +
geom_point() +
geom_label(aes(label = round(per,2))) +
scale_x_continuous(limits = c(2015, 2017), n.breaks = 3) +
scale_y_continuous(limits = c(0, 15), n.breaks = 8) +
labs(title = "Unionized2 (2015-2017)",
x = "Año", y = "%")
ggsave("output/img/unionized2.jpeg", dpi = 500)
exp(-.12)
.89-1
rm(list = ls())
# Gráficos análisis datos DT-OHL ------------------------------------------
# Cargar paquetes ---------------------------------------------------------
pacman::p_load(tidyverse,
ggplot2,
sjmisc,
readxl,
ggrepel,
patchwork)
# Cargar datos ------------------------------------------------------------
dt = read_xlsx("input/data/anuario_dt.xlsx",
sheet = "resumen",
range = "B1:J341") %>%
mutate(actividad_raw = factor(actividad_raw))
ohl = readRDS("output/data/ohl.rds")
# Preparación de datos ----------------------------------------------------
# Cargar datos ------------------------------------------------------------
ohl <- read.csv2("input/data/OHL1979_2020.csv", na.strings = "")
# Selección y filtrado ----------------------------------------------------
ohl_p <- ohl %>%
filter(yr %in% c(1999:2019) & inst %in% c(1,2)) %>%
select(sector2 = ciuur2,
sector3 = ciuur3,
sector4 = ciuur4,
ano = yr,
duracion,
ddpp,
rangoemp,
#org,
tc,
#reg1,
leg,
dptp = dhtp) %>%
# Recodificación ----------------------------------------------------------
mutate(actividad_raw = case_when(sector2 == 1 | sector3 %in% c(1,2) | sector4 == 0 ~ "1. Agricultura, ganadería, silvicultura y pesca",
sector2 == 2 | sector3 == 3 | sector4 == 1 ~ "2. Minería",
sector2 == 3 | sector3 == 4 | sector4 == 2 ~ "3. Industrias manufactureras",
sector2 == 4 | sector3 == 5 | sector4 %in% c(3,4) ~ "4. Suministro de electricidad, gas y agua",
sector2 == 5 | sector3 == 6 | sector4 == 5 ~ "5. Construcción",
sector2 == 6 | sector3 %in% c(7,8) | sector4 %in% c(6,8) ~ "6. Comercio, hoteles y restaurantes",
sector2 == 7 | sector3 == 9 | sector4 %in% c(7,9) ~ "7. Transporte y comunicaciones",
sector2 == 8 | sector3 %in% c(10,11) | sector4 %in% c(10:13) ~ "8. Servicios financieros, inmobiliarios y empresariales",
sector2 %in% c(9:12) | sector3 %in% c(12:17) | sector4 %in% c(14:20) ~ "9. Servicios sociales, domésticos, profesionales y otros",
TRUE ~ NA_character_) %>%
factor(),
dptp = as.numeric(gsub(",", ".", .$dptp)),
leg = ifelse(leg == 1, 1, 0),
extra_leg = ifelse(leg == 0, 1, 0)) %>%
rowwise() %>%
mutate(
n_huelga = sum(leg, extra_leg, na.rm = T)
) %>%
ungroup() %>%
select(ano,
actividad_raw,
duracion,
ddpp,
rangoemp,
tc,
n_huelga,
leg,
extra_leg,
dptp)
# Exportar datos ----------------------------------------------------------
saveRDS(ohl_p, "output/data/ohl.rds")
rm(list = ls())
# Gráficos análisis datos DT-OHL ------------------------------------------
# Cargar paquetes ---------------------------------------------------------
pacman::p_load(tidyverse,
ggplot2,
sjmisc,
readxl,
ggrepel,
patchwork)
# Cargar datos ------------------------------------------------------------
dt = read_xlsx("input/data/anuario_dt.xlsx",
sheet = "resumen",
range = "B1:J341") %>%
mutate(actividad_raw = factor(actividad_raw))
ohl = readRDS("output/data/ohl.rds")
# Promedio de trabajadores involucrados en huelgas ------------------------
lista = list()
point = c(9:19)
for (i in 1:9) {
a = ohl %>%
filter(ano %in% c(1999:2019)) %>%
group_by(ano, actividad_raw) %>%
summarise(n = round(mean(tc, na.rm = T), 2)) %>%
filter(actividad_raw == levels(ohl$actividad_raw)[i]) %>%
ggplot(aes(x = ano, y = n)) +
geom_line() +
geom_point(shape = point[i], size = 2, color = "black") +
labs(subtitle = str_wrap(levels(ohl$actividad_raw)[i], width = 32),
caption = "",
x = "Año",
y = "") +
#geom_text_repel(aes(label = paste(n, "%")), colour = "black") +
scale_x_continuous(limits = c(1999, 2019), n.breaks = 20) +
scale_y_continuous(limits = c(0,100), n.breaks = 5) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
lista[[i]] = a
}
wrap_plots(lista,
ncol = 3,
nrow = 3)
for (i in 1:9) {
a = ohl %>%
filter(ano %in% c(1999:2019)) %>%
group_by(ano, actividad_raw) %>%
summarise(n = round(mean(tc, na.rm = T), 2)) %>%
filter(actividad_raw == levels(ohl$actividad_raw)[i]) %>%
ggplot(aes(x = ano, y = n)) +
geom_line() +
geom_point(shape = point[i], size = 2, color = "black") +
labs(subtitle = str_wrap(levels(ohl$actividad_raw)[i], width = 32),
caption = "",
x = "Año",
y = "") +
#geom_text_repel(aes(label = paste(n, "%")), colour = "black") +
scale_x_continuous(limits = c(1999, 2019), n.breaks = 20) +
scale_y_continuous(limits = c(0,5000), n.breaks = 5) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
lista[[i]] = a
}
wrap_plots(lista,
ncol = 3,
nrow = 3)
# Promedio de trabajadores involucrados en huelgas ------------------------
lista = list()
point = c(9:19)
for (i in 1:9) {
a = ohl %>%
filter(ano %in% c(1999:2019)) %>%
group_by(ano, actividad_raw) %>%
summarise(n = round(mean(tc, na.rm = T), 2)) %>%
filter(actividad_raw == levels(ohl$actividad_raw)[i]) %>%
ggplot(aes(x = ano, y = n)) +
geom_line() +
geom_point(shape = point[i], size = 2, color = "black") +
labs(subtitle = str_wrap(levels(ohl$actividad_raw)[i], width = 32),
caption = "",
x = "Año",
y = "") +
#geom_text_repel(aes(label = paste(n, "%")), colour = "black") +
scale_x_continuous(limits = c(1999, 2019), n.breaks = 20) +
scale_y_continuous(limits = c(0,3000), n.breaks = 5) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
lista[[i]] = a
}
wrap_plots(lista,
ncol = 3,
nrow = 3)
ggsave("output/img/trab_act.jpg")
rm(list = ls())
# Gráficos análisis datos DT-OHL ------------------------------------------
# Cargar paquetes ---------------------------------------------------------
pacman::p_load(tidyverse,
ggplot2,
sjmisc,
readxl,
ggrepel,
patchwork)
# Cargar datos ------------------------------------------------------------
dt = read_xlsx("input/data/anuario_dt.xlsx",
sheet = "resumen",
range = "B1:J341") %>%
mutate(actividad_raw = factor(actividad_raw))
ohl = readRDS("output/data/ohl.rds")
# Gráficos ----------------------------------------------------------------
#Son todos por rama
# Promedio de huelgas ----------------------------------
lista = list()
point = c(9:19)
for (i in 1:9) {
a = ohl %>%
filter(ano %in% c(1999:2019) & !is.na(actividad_raw)) %>%
count(ano, actividad_raw) %>%
filter(actividad_raw == levels(ohl$actividad_raw)[i]) %>%
ggplot(aes(x = ano, y = n)) +
geom_line() +
geom_point(shape = point[i], size = 2, color = "black") +
labs(subtitle = str_wrap(levels(ohl$actividad_raw)[i], width = 32),
caption = "",
x = "Año",
y = "") +
#geom_text_repel(aes(label = paste(n, "%")), colour = "black") +
scale_x_continuous(limits = c(1999, 2019), n.breaks = 20) +
scale_y_continuous(limits = c(0,100), n.breaks = 5) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
lista[[i]] = a
}
wrap_plots(lista,
ncol = 3,
nrow = 3)
ggsave("output/img/n_huelgas_act.jpg")
# Promedio de Días-personas de trabajo perdido en huelgas -----------------
lista = list()
point = c(9:19)
for (i in 1:9) {
a = ohl %>%
filter(ano %in% c(1999:2019)) %>%
group_by(ano, actividad_raw) %>%
summarise(n = round(mean(dptp, na.rm = T), 2)) %>%
filter(actividad_raw == levels(ohl$actividad_raw)[i]) %>%
ggplot(aes(x = ano, y = n)) +
geom_line() +
geom_point(shape = point[i], size = 2, color = "black") +
labs(subtitle = str_wrap(levels(ohl$actividad_raw)[i], width = 32),
caption = "",
x = "Año",
y = "") +
#geom_text_repel(aes(label = paste(n, "%")), colour = "black") +
scale_x_continuous(limits = c(1999, 2019), n.breaks = 20) +
scale_y_continuous(limits = c(0,15000), n.breaks = 5) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
lista[[i]] = a
}
wrap_plots(lista,
ncol = 3,
nrow = 3)
ggsave("output/img/dptp_act(1).jpg")
# Promedio de trabajadores involucrados en huelgas ------------------------
lista = list()
point = c(9:19)
for (i in 1:9) {
a = ohl %>%
filter(ano %in% c(1999:2019)) %>%
group_by(ano, actividad_raw) %>%
summarise(n = round(mean(tc, na.rm = T), 2)) %>%
filter(actividad_raw == levels(ohl$actividad_raw)[i]) %>%
ggplot(aes(x = ano, y = n)) +
geom_line() +
geom_point(shape = point[i], size = 2, color = "black") +
labs(subtitle = str_wrap(levels(ohl$actividad_raw)[i], width = 32),
caption = "",
x = "Año",
y = "") +
#geom_text_repel(aes(label = paste(n, "%")), colour = "black") +
scale_x_continuous(limits = c(1999, 2019), n.breaks = 20) +
scale_y_continuous(limits = c(0,3000), n.breaks = 5) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
lista[[i]] = a
}
wrap_plots(lista,
ncol = 3,
nrow = 3)
ggsave("output/img/trab_act.jpg")
# Tasa de afiliación sindical  ------------------------------------
lista = list()
point = c(9:19)
for (i in 1:9) {
a = dt %>%
filter(ano %in% c(1999:2019)) %>%
group_by(ano, actividad_raw) %>%
summarise(n = round(mean(tasa_sind_per, na.rm = T), 2)) %>%
filter(actividad_raw == levels(dt$actividad_raw)[i]) %>%
ggplot(aes(x = ano, y = n)) +
geom_line() +
geom_point(shape = point[i], size = 2, color = "black") +
labs(subtitle = str_wrap(levels(dt$actividad_raw)[i], width = 32),
caption = "",
x = "Año",
y = "") +
#geom_text_repel(aes(label = paste(n, "%")), colour = "black") +
scale_x_continuous(limits = c(1999, 2019), n.breaks = 20) +
scale_y_continuous(limits = c(0,100), n.breaks = 5) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
lista[[i]] = a
}
wrap_plots(lista,
ncol = 3,
nrow = 3)
ggsave("output/img/tasa_sind_act.jpg")
# Tasa de fragmentación sindical por 1000 trabajadores --------------------
lista = list()
point = c(9:19)
for (i in 1:9) {
a = dt %>%
filter(ano %in% c(1999:2019)) %>%
group_by(ano, actividad_raw) %>%
summarise(n = round(mean(n_sind_mil, na.rm = T), 2)) %>%
filter(actividad_raw == levels(dt$actividad_raw)[i]) %>%
ggplot(aes(x = ano, y = n)) +
geom_line() +
geom_point(shape = point[i], size = 2, color = "black") +
labs(subtitle = str_wrap(levels(dt$actividad_raw)[i], width = 32),
caption = "",
x = "Año",
y = "") +
#geom_text_repel(aes(label = paste(n, "%")), colour = "black") +
scale_x_continuous(limits = c(1999, 2019), n.breaks = 20) +
scale_y_continuous(limits = c(0,5), n.breaks = 5) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
lista[[i]] = a
}
wrap_plots(lista,
ncol = 3,
nrow = 3)
ggsave("output/img/n_sind_act.jpg")
for (i in 1:9) {
a = dt %>%
filter(ano %in% c(1999:2019)) %>%
group_by(ano, actividad_raw) %>%
summarise(n = round(mean(tasa_sind_per, na.rm = T), 2)) %>%
filter(actividad_raw == levels(dt$actividad_raw)[i]) %>%
ggplot(aes(x = ano, y = n)) +
geom_line() +
geom_point(shape = point[i], size = 2, color = "black") +
labs(subtitle = str_wrap(levels(dt$actividad_raw)[i], width = 32),
caption = "",
x = "Año",
y = "") +
#geom_text_repel(aes(label = paste(n, "%")), colour = "black") +
scale_x_continuous(limits = c(1999, 2019), n.breaks = 20) +
scale_y_continuous(limits = c(0,100), n.breaks = 5) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
lista[[i]] = a
}
wrap_plots(lista,
ncol = 3,
nrow = 3)
