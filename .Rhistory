(b2 %in% "…para su propio negocio, empresa o actividad por cuenta propia?" & ciiu14 %in% c("Agricultura, ganadería, caza y silvicultura", "Pesca")) ~ "1. Agricultura, ganadería, silvicultura y pesca",
(b12 %in% "…directamente con la empresa en donde trabaja?" & ciiu14 %in% c("Explotación de minas y canteras"))|
(!b12 %in% "…directamente con la empresa en donde trabaja?" & ciiu13 %in% c("Explotación de minas y canteras"))|
(b2 %in% "…para su propio negocio, empresa o actividad por cuenta propia?" & ciiu14 %in% c("Explotación de minas y canteras")) ~ "2. Minería",
(b12 %in% "…directamente con la empresa en donde trabaja?" & ciiu14 %in% c("Industrias manufactureras"))|
(!b12 %in% "…directamente con la empresa en donde trabaja?" & ciiu13 %in% c("Industrias manufactureras"))|
(b2 %in% "…para su propio negocio, empresa o actividad por cuenta propia?" & ciiu14 %in% c("Industrias manufactureras")) ~ "3. Industrias manufactureras",
(b12 %in% "…directamente con la empresa en donde trabaja?" & ciiu14 %in% c("Suministro de electricidad, gas y agua"))|
(!b12 %in% "…directamente con la empresa en donde trabaja?" & ciiu13 %in% c("Suministro de electricidad, gas y agua"))|
(b2 %in% "…para su propio negocio, empresa o actividad por cuenta propia?" & ciiu14 %in% c("Suministro de electricidad, gas y agua")) ~ "4. Suministro de electricidad, gas y agua",
(b12 %in% "…directamente con la empresa en donde trabaja?" & ciiu14 %in% c("Construcción"))|
(!b12 %in% "…directamente con la empresa en donde trabaja?" & ciiu13 %in% c("Construcción"))|
(b2 %in% "…para su propio negocio, empresa o actividad por cuenta propia?" & ciiu14 %in% c("Construcción")) ~ "5. Construcción",
(b12 %in% "…directamente con la empresa en donde trabaja?" & ciiu14 %in% c("Comercio al por mayor y al por menor", "Hoteles y restaurantes"))|
(!b12 %in% "…directamente con la empresa en donde trabaja?" & ciiu13 %in% c("Comercio al por mayor y al por menor", "Hoteles y restaurantes"))|
(b2 %in% "…para su propio negocio, empresa o actividad por cuenta propia?" & ciiu14 %in% c("Comercio al por mayor y al por menor", "Hoteles y restaurantes")) ~ "6. Comercio, hoteles y restaurantes",
(b12 %in% "…directamente con la empresa en donde trabaja?" & ciiu14 %in% c("Transporte, almacenamiento y comunicaciones"))|
(!b12 %in% "…directamente con la empresa en donde trabaja?" & ciiu13 %in% c("Transporte, almacenamiento y comunicaciones"))|
(b2 %in% "…para su propio negocio, empresa o actividad por cuenta propia?" & ciiu14 %in% c("Transporte, almacenamiento y comunicaciones")) ~ "7. Transporte y comunicaciones",
(b12 %in% "…directamente con la empresa en donde trabaja?" & ciiu14 %in% c("Intermediación financiera", "Actividades inmobiliarias, empresariales y de alquiler"))|
(!b12 %in% "…directamente con la empresa en donde trabaja?" & ciiu13 %in% c("Intermediación financiera", "Actividades inmobiliarias, empresariales y de alquiler"))|
(b2 %in% "…para su propio negocio, empresa o actividad por cuenta propia?" & ciiu14 %in% c("Intermediación financiera", "Actividades inmobiliarias, empresariales y de alquiler")) ~ "8. Servicios financieros, inmobiliarios y empresariales",
(b12 %in% "…directamente con la empresa en donde trabaja?" & !is.na(ciiu14))|
(!b12 %in% "…directamente con la empresa en donde trabaja?" & !is.na(ciiu13))|
(b2 %in% "…para su propio negocio, empresa o actividad por cuenta propia?" & !is.na(ciiu14)) ~ "9. Servicios sociales, domésticos, profesionales y otros",
TRUE ~ NA_character_),
cp_priv = ifelse(cise %in% c("Cuenta propia", "Asalariado sector privado", "Personal de servicio doméstico puertas afuera", "Personal de servicio doméstico puertas adentro"),
"CP/Priv", "No"),
sexo = ifelse(sexo == "Mujer", "Mujer", "No"),
self_empl = ifelse(cise %in% c("Cuenta propia"),
"CP", "No"),
skills = ifelse(ciuo %in% c("Profesionales científicos e intelectuales", "Técnicos profesionales de nivel medio"), "Experto", "No"),
contract_duration = ifelse(contract_duration == "…indefinido, es decir, sin plazo de término?", "Indefinido", "No"),
tamano = ifelse(tamano %in% c("Entre 50 y 199", "200 y más personas"), "Más de 50", "No"),
edad = str_extract(edad, pattern = "\\d{1,3}") %>% as.numeric(.),
job_seniority = str_extract(job_seniority, pattern = "\\d{4}") %>% as.numeric(.),
job_seniority = ifelse(!is.na(job_seniority), ano - job_seniority, NA),
contract_type = ifelse(contract_type == "Completa", "Completa", "No"),
unempl = ifelse(unempl %in% c("Cesante", "Busca trabajo por primera vez", "Iniciador", "Inactivos que buscaron", "Inactivos que estuvieron disponibles"), "Desempleado", "No")) %>%
select(-c(ciuo, ciiu13, ciiu14)),
.progress = T) %>%
map_if(., ~ncol(.x) > 143,
~ .x %>%
mutate_at(vars(-c(ano_trimestre, estrato, id_directorio, hogar, fact_cal,
b13_caenes_2d,
b14_caenes_2d)),
~haven::as_factor(.)) %>%
select(ano = ano_trimestre,
estrato,
cong = id_directorio,
id = hogar,
fe = fact_cal,
b2,
b12,
b13_caenes_2d,
b14_caenes_2d,
ciiu13 = b13_rev4cl_caenes,
ciiu14 = b14_rev4cl_caenes,
cise = categoria_ocupacion,
ciuo = b1_ciuo88,
contract_duration = b9,
tamano = b15_1,
job_seniority = b17_ano,
contract_type = c1,
unempl = cae_general,
sexo,
edad) %>%
mutate(across(ends_with("_2d"), ~ifelse(. == "", NA, as.numeric(.)))) %>%
merge(.,
llave %>% rename(b13_caenes_2d = CAENES_ENE, ID13 = ID),
by = "b13_caenes_2d", all.x = T) %>%
merge(.,
llave %>% rename(b14_caenes_2d = CAENES_ENE, ID14 = ID),
by = "b14_caenes_2d", all.x = T) %>%
mutate(ID = case_when(str_detect(b12,"directamente con la empresa en donde trabaja") | str_detect(b2, "para su propio negocio, empresa o actividad por cuenta propia") | is.na(ID13)  ~ ID14,
!str_detect(b12,"directamente con la empresa en donde trabaja") | is.na(ID14)  ~ ID13,
TRUE ~ NA_real_),
ciiu = case_when((b12 %in% "…directamente con la empresa en donde trabaja?" & ciiu14 %in% c("Agricultura, ganadería, silvicultura y pesca"))|
(!b12 %in% "…directamente con la empresa en donde trabaja?" & ciiu13 %in% c("Agricultura, ganadería, silvicultura y pesca"))|
(b2 %in% "…para su propio negocio, empresa o actividad por cuenta propia?" & ciiu14 %in% c("Agricultura, ganadería, silvicultura y pesca")) ~ "1. Agricultura, ganadería, silvicultura y pesca",
(b12 %in% "…directamente con la empresa en donde trabaja?" & ciiu14 %in% c("Explotación de minas y canteras"))|
(!b12 %in% "…directamente con la empresa en donde trabaja?" & ciiu13 %in% c("Explotación de minas y canteras"))|
(b2 %in% "…para su propio negocio, empresa o actividad por cuenta propia?" & ciiu14 %in% c("Explotación de minas y canteras")) ~ "2. Minería",
(b12 %in% "…directamente con la empresa en donde trabaja?" & ciiu14 %in% c("Industrias manufactureras"))|
(!b12 %in% "…directamente con la empresa en donde trabaja?" & ciiu13 %in% c("Industrias manufactureras"))|
(b2 %in% "…para su propio negocio, empresa o actividad por cuenta propia?" & ciiu14 %in% c("Industrias manufactureras")) ~ "3. Industrias manufactureras",
(b12 %in% "…directamente con la empresa en donde trabaja?" & ciiu14 %in% c("Suministro de electricidad, gas, vapor y aire acondicionado", "Suministro de agua"))|
(!b12 %in% "…directamente con la empresa en donde trabaja?" & ciiu13 %in% c("Suministro de electricidad, gas, vapor y aire acondicionado", "Suministro de agua"))|
(b2 %in% "…para su propio negocio, empresa o actividad por cuenta propia?" & ciiu14 %in% c("Suministro de electricidad, gas, vapor y aire acondicionado", "Suministro de agua")) ~ "4. Suministro de electricidad, gas y agua",
(b12 %in% "…directamente con la empresa en donde trabaja?" & ciiu14 %in% c("Construcción"))|
(!b12 %in% "…directamente con la empresa en donde trabaja?" & ciiu13 %in% c("Construcción"))|
(b2 %in% "…para su propio negocio, empresa o actividad por cuenta propia?" & ciiu14 %in% c("Construcción")) ~ "5. Construcción",
(b12 %in% "…directamente con la empresa en donde trabaja?" & ciiu14 %in% c("Comercio al por mayor y al por menor", "Actividades de alojamiento y de servicio de comidas"))|
(!b12 %in% "…directamente con la empresa en donde trabaja?" & ciiu13 %in% c("Comercio al por mayor y al por menor", "Actividades de alojamiento y de servicio de comidas"))|
(b2 %in% "…para su propio negocio, empresa o actividad por cuenta propia?" & ciiu14 %in% c("Comercio al por mayor y al por menor", "Actividades de alojamiento y de servicio de comidas")) ~ "6. Comercio, hoteles y restaurantes",
(b12 %in% "…directamente con la empresa en donde trabaja?" & ciiu14 %in% c("Transporte y almacenamiento", "Información y comunicaciones"))|
(!b12 %in% "…directamente con la empresa en donde trabaja?" & ciiu13 %in% c("Transporte y almacenamiento", "Información y comunicaciones"))|
(b2 %in% "…para su propio negocio, empresa o actividad por cuenta propia?" & ciiu14 %in% c("Transporte y almacenamiento", "Información y comunicaciones")) ~ "7. Transporte y comunicaciones",
(b12 %in% "…directamente con la empresa en donde trabaja?" & ciiu14 %in% c("Actividades financieras y de seguros", "Actividades inmobiliarias", "Actividades profesionales, científicas y técnicas", "Actividades de servicios administrativos y de apoyo"))|
(!b12 %in% "…directamente con la empresa en donde trabaja?" & ciiu13 %in% c("Actividades financieras y de seguros", "Actividades inmobiliarias", "Actividades profesionales, científicas y técnicas", "Actividades de servicios administrativos y de apoyo"))|
(b2 %in% "…para su propio negocio, empresa o actividad por cuenta propia?" & ciiu14 %in% c("Actividades financieras y de seguros", "Actividades inmobiliarias", "Actividades profesionales, científicas y técnicas", "Actividades de servicios administrativos y de apoyo")) ~ "8. Servicios financieros, inmobiliarios y empresariales",
(b12 %in% "…directamente con la empresa en donde trabaja?" & !is.na(ciiu14))|
(!b12 %in% "…directamente con la empresa en donde trabaja?" & !is.na(ciiu13))|
(b2 %in% "…para su propio negocio, empresa o actividad por cuenta propia?" & !is.na(ciiu14)) ~ "9. Servicios sociales, domésticos, profesionales y otros",
TRUE ~ NA_character_),
cp_priv = ifelse(cise %in% c("Cuenta propia", "Asalariado sector privado", "Personal de servicio doméstico puertas afuera", "Personal de servicio doméstico puertas adentro"),
"CP/Priv", "No"),
sexo = ifelse(sexo == "Mujer", "Mujer", "No"),
self_empl = ifelse(cise %in% c("Cuenta propia"),
"CP", "No"),
skills = ifelse(ciuo %in% c("Profesionales científicos e intelectuales", "Profesionales, científicos e intelectuales",
"Técnicos profesionales de nivel medio", "Técnicos y profesionales de nivel medio"), "Experto", "No"),
contract_duration = ifelse(contract_duration == "…indefinido, es decir, sin plazo de término?", "Indefinido", "No"),
tamano = ifelse(tamano %in% c("Entre 50 y 199", "200 y más personas"), "Más de 50", "No"),
edad = str_extract(edad, pattern = "\\d{1,3}") %>% as.numeric(.),
job_seniority = str_extract(job_seniority, pattern = "\\d{4}") %>% as.numeric(.),
job_seniority = ifelse(!is.na(job_seniority), ano - job_seniority, NA),
contract_type = ifelse(contract_type == "Completa", "Completa", "No"),
unempl = ifelse(unempl %in% c("Cesante", "Busca trabajo por primera vez", "Iniciador", "Inactivos que buscaron", "Inactivos que estuvieron disponibles"), "Desempleado", "No")) %>%
select(-c(ciuo, ciiu13, ciiu14)),
.progress = T)
a = data.list[files[1:10]]
a = bind_rows(a)
frq(a$ID)
frq(a$ciiu)
# data.list2 = map_if(data.list, ~ncol(.x)>=20,
#                    ~.x %>%
#                      merge(.,
#                            llave %>% rename(b13_ciiu3_2d = CAENES_ENE, ID13 = ID),
#                            by = "b13_ciiu3_2d", all.x = T) %>%
#                      merge(.,
#                            llave %>% rename(b13_ciiu3_24 = CAENES_ENE, ID14 = ID),
#                            by = "b14_ciiu3_2d", all.x = T) %>%
#                      mutate(ID = case_when(b12 %in% "…directamente con la empresa en donde trabaja?" | b2 %in% "…para su propio negocio, empresa o actividad por cuenta propia?" ~ ID14,
#                                            !b12 %in% "…directamente con la empresa en donde trabaja?" ~ ID13,
#                                            TRUE ~ NA_real_)))
# map_if(data.list,~ncol(.x)==9,
#    ~frq(.x %>% select(b12,ciiu13, ciiu14, cise)))
# Exportar ----------------------------------------------------------------
save(data.list, file="output/data/ene_86_19.RData")
rm(list=ls())
# Estimación totales ENE 1986-2019 ----------------------------------------
# Por rama
options(survey.adjust.domain.lonely=TRUE)
options(survey.lonely.psu="adjust")
# Cargar paquetes ---------------------------------------------------------
pacman::p_load(tidyverse,
survey,
srvyr,
writexl,
beepr)
# Cargar data -------------------------------------------------------------
load("output/data/ene_86_19.RData")
olas = as.character(seq(2010, 2019))
data.list = data.list[olas]
# Transformar df en objetos encuesta --------------------------------------
enc = map(data.list,
~.x %>% as_survey_design(ids = cong,
strata = estrato,
weights = fe,
nest = T))
rm(data.list, olas)
# Estimar -----------------------------------------------------------------
# Totales por rama --------------------------------------------------------
a = enc %>%
map(.,
~.x %>%
group_by(ID, cp_priv) %>%
summarise(total = survey_total(na.rm = T)) %>%
ungroup() %>%
filter(cp_priv == "CP/Priv" & !is.na(ID)) %>%
select(ID, total)) %>%
imap(.,
~.x %>% mutate(ano = .y))
beep(1)
totales = bind_rows(a)
total_ano = totales %>%
group_by(ano) %>%
summarise(ID = "Total",
total = sum(total)) %>%
ungroup()
totales = rbind(totales, total_ano)
rm(total_ano)
totales = totales[order(totales$ano, totales$ID),]
write_xlsx(totales, "output/data/totales_ene_99-19.xlsx")
a = enc %>%
map(.,
~.x %>%
group_by(ID, cp_priv, sexo) %>%
summarise(female = survey_total(na.rm = T)) %>%
ungroup() %>%
filter(sexo == "Mujer" & cp_priv == "CP/Priv" & !is.na(ID)) %>%
select(ID, female)) %>%
imap(.,
~.x %>% mutate(ano = .y))
beep(1)
female = bind_rows(a)
female_ano = female %>%
group_by(ano) %>%
summarise(ID = "Total",
female = sum(female)) %>%
ungroup()
female = rbind(female, female_ano)
rm(female_ano)
female = female[order(female$ano, female$ID),]
write_xlsx(totales, "output/data/female_ene_99-19.xlsx")
a = enc %>%
map(.,
~.x %>%
group_by(ID, cp_priv) %>%
summarise(age = survey_mean(edad, na.rm = T)) %>%
ungroup() %>%
filter(cp_priv == "CP/Priv" & !is.na(ID)) %>%
select(ID, age)) %>%
imap(.,
~.x %>% mutate(ano = .y))
beep(1)
age = bind_rows(a)
age_ano = age %>%
group_by(ano) %>%
summarise(ID = "Total",
age = mean(age)) %>%
ungroup()
age = rbind(age, age_ano)
rm(age_ano)
age = age[order(age$ano, age$ID),]
a = enc %>%
map(.,
~.x %>%
group_by(ID, self_empl) %>%
summarise(a = survey_total(na.rm = T)) %>%
ungroup() %>%
filter(self_empl == "CP" & !is.na(ID)) %>%
select(ID, self_empl = a)) %>%
imap(.,
~.x %>% mutate(ano = .y))
beep(1)
self_empl = bind_rows(a)
self_empl_ano = self_empl %>%
group_by(ano) %>%
summarise(ID = "Total",
self_empl = sum(self_empl)) %>%
ungroup()
self_empl = rbind(self_empl, self_empl_ano)
rm(self_empl_ano)
self_empl = self_empl[order(self_empl$ano, self_empl$ID),]
a = enc %>%
map(.,
~.x %>%
group_by(ID, cp_priv, skills) %>%
summarise(a = survey_total(na.rm = T)) %>%
ungroup() %>%
filter(skills == "Experto" & cp_priv == "CP/Priv" & !is.na(ID)) %>%
select(ID, skills = a)) %>%
imap(.,
~.x %>% mutate(ano = .y))
beep(1)
skills = bind_rows(a)
skills_ano = skills %>%
group_by(ano) %>%
summarise(ID = "Total",
skills = sum(skills)) %>%
ungroup()
skills = rbind(skills, skills_ano)
rm(skills_ano)
skills = skills[order(skills$ano, skills$ID),]
a = enc %>%
map_if(.,
~mean(.x$variables$ano) %in% c(2010:2019),
~.x %>%
group_by(ID, cp_priv, contract_duration) %>%
summarise(a = survey_total(na.rm = T)) %>%
ungroup() %>%
filter(contract_duration == "Indefinido" & cp_priv == "CP/Priv" & !is.na(ID)) %>%
select(ID, contract_duration = a)) %>%
imap(.,
~.x %>% mutate(ano = .y))
olas = as.character(seq(2010, 2019))
a = a[olas]
beep(1)
contract_duration = bind_rows(a)
contract_duration_ano = contract_duration %>%
group_by(ano) %>%
summarise(ID = "Total",
contract_duration = sum(contract_duration)) %>%
ungroup()
contract_duration = rbind(contract_duration, contract_duration_ano)
rm(contract_duration_ano)
contract_duration = contract_duration[order(contract_duration$ano, contract_duration$ID),]
a = enc %>%
map_if(.,
~mean(.x$variables$ano) %in% c(2010:2019),
~.x %>%
group_by(ID, cp_priv, tamano) %>%
summarise(a = survey_total(na.rm = T)) %>%
ungroup() %>%
filter(tamano == "Más de 50" & cp_priv == "CP/Priv" & !is.na(ID)) %>%
select(ID, firm_size = a)) %>%
imap(.,
~.x %>% mutate(ano = .y))
beep(1)
olas = as.character(seq(2010, 2019))
a = a[olas]
tamano = bind_rows(a)
tamano_ano = tamano %>%
group_by(ano) %>%
summarise(ID = "Total",
firm_size = sum(firm_size)) %>%
ungroup()
tamano = rbind(tamano, tamano_ano)
rm(tamano_ano)
tamano = tamano[order(tamano$ano, tamano$ID),]
a = enc %>%
map_if(.,
~mean(.x$variables$ano) %in% c(2010:2019),
~.x %>%
group_by(ID, cp_priv) %>%
summarise(a = survey_mean(job_seniority, na.rm = T)) %>%
ungroup() %>%
filter(cp_priv == "CP/Priv" & !is.na(ID)) %>%
select(ID, job_seniority = a)) %>%
imap(.,
~.x %>% mutate(ano = .y))
beep(1)
olas = as.character(seq(2010, 2019))
a = a[olas]
job_seniority = bind_rows(a)
job_seniority_ano = job_seniority %>%
group_by(ano) %>%
summarise(ID = "Total",
job_seniority = mean(job_seniority)) %>%
ungroup()
job_seniority = rbind(job_seniority, job_seniority_ano)
rm(job_seniority_ano)
job_seniority = job_seniority[order(job_seniority$ano, job_seniority$ID),]
a = enc %>%
map_if(.,
~mean(.x$variables$ano) %in% c(2010:2019),
~.x %>%
group_by(ID, cp_priv, contract_type) %>%
summarise(a = survey_total(na.rm = T)) %>%
ungroup() %>%
filter(contract_type == "Completa" & cp_priv == "CP/Priv" & !is.na(ID)) %>%
select(ID, contract_type = a)) %>%
imap(.,
~.x %>% mutate(ano = .y))
beep(1)
olas = as.character(seq(2010, 2019))
a = a[olas]
contract_type = bind_rows(a)
contract_type_ano = contract_type %>%
group_by(ano) %>%
summarise(ID = "Total",
contract_type = sum(contract_type)) %>%
ungroup()
contract_type = rbind(contract_type, contract_type_ano)
rm(contract_type_ano)
contract_type = contract_type[order(contract_type$ano, contract_type$ID),]
lista = list(totales,
female,
age,
self_empl,
skills,
contract_duration,
tamano,
job_seniority,
contract_type#, unempl, cise
) %>%
Reduce(function(x,y) merge (x,y, all = T), .) %>%
arrange(ano, ID) %>%
rowwise() %>%
mutate(across(c(female, self_empl, skills, contract_duration,
firm_size, contract_type),
~ifelse(!is.na(.), round((./total)*100,3), NA))#, #unempl = ifelse(ID == "Total", round((unempl/total)*100,3), NA)
) %>%
ungroup() %>%
# arrange(ID, ano) %>%
# mutate(across(c(female, self_empl, skills, contract_duration,
#                 firm_size, job_seniority, contract_type, unempl),
#               ~lag(.),
#               .names = "lag_{.col}")) %>%
arrange(ano, ID) %>%
filter(ano != "1998")
# Exportar ----------------------------------------------------------------
write_xlsx(lista, "output/data/ene_final_ID.xlsx")
saveRDS(lista, "output/data/ene_final_ID.rds")
rm(list=ls())
# Unificar data ENE - DT (OOSS-NC-H) --------------------------------------
# Cargar paquetes ---------------------------------------------------------
pacman::p_load(tidyverse, sjmisc)
# Cargar data -------------------------------------------------------------
dt = readRDS("output/data/data_dt_proc_final.rds")
ene = readRDS("output/data/ene_final_ID.rds") %>%
mutate(ID = as.numeric(ID),
ano = as.numeric(ano)) %>%
filter(!is.na(ID))
olas = data.frame(ID = rep(c(1:43), 14),
ano = map(2010:2023, ~rep(.x, 43)) %>% unlist())
# Unificar ----------------------------------------------------------------
data = list(ene, dt) %>%
reduce(full_join, by = c("ID", "ano")) %>%
merge(olas,
.,
by = c("ano", "ID"), all = T) %>%
arrange(ano, ID) %>%
filter(ano %in% 2010:2023) %>%
mutate(across(total:por_cen,
~tidyr::replace_na(., 0)),
tasa_afiliacion = ifelse(if_all(c(n_afil_tot, total), ~.!=0), round((n_afil_tot/total)*100,3), 0),
por_cobertura = ifelse(if_all(c(cubiertos_tot, total), ~.!=0), round((cubiertos_tot/total)*100,3), 0),
por_cobertura_cont = ifelse(if_all(c(cubiertos_cont, total), ~.!=0), round((cubiertos_cont/total)*100,3), 0),
por_cobertura_otro = ifelse(if_all(c(cubiertos_otro, total), ~.!=0), round((cubiertos_otro/total)*100,3), 0),
n_sind_mil = ifelse(if_all(c(n_sind, total), ~.!=0), round((n_sind/(total/1000))*100,3), 0)) %>%
arrange(ID, ano) %>%
#group_by(ID, ano) %>%
mutate(across(c(tasa_afiliacion, por_cobertura, por_cobertura_cont, por_cobertura_otro),
~ifelse(ano %in% 2011:2023, dplyr::lag(.), 0),
.names = "lag_{.col}")) %>%
ungroup()
# Exportar ----------------------------------------------------------------
saveRDS(data,"output/data/data_dt_ene_final.rds")
data %>%
summarise(across(c(tasa_afiliacion, por_cobertura, por_cobertura_cont),
~sum(. > 100)))
data %>%
filter(if_any(c(tasa_afiliacion, por_cobertura, por_cobertura_cont),
~.>100)) %>%
select(ID, ano,
total, n_afil_tot, tasa_afiliacion,
cubiertos_tot, por_cobertura,
cubiertos_cont, por_cobertura_cont,
n_sind)
# Cargar paquetes ---------------------------------------------------------
pacman::p_load(tidyverse, sjmisc, writexl)
data %>%
filter(if_any(c(tasa_afiliacion, por_cobertura, por_cobertura_cont),
~.>100)) %>%
select(ID, ano,
total, n_afil_tot, tasa_afiliacion,
cubiertos_tot, por_cobertura,
cubiertos_cont, por_cobertura_cont,
n_sind) %>%
write_xlsx("rev_porcentajes.xlsx")
data %>%
filter(if_any(c(tasa_afiliacion, por_cobertura, por_cobertura_cont),
~.>100)) %>%
select(ID, ano,
total, n_afil_tot, tasa_afiliacion,
cubiertos_tot, por_cobertura,
cubiertos_cont, por_cobertura_cont,
n_sind) %>% unique(ID)
data %>%
filter(if_any(c(tasa_afiliacion, por_cobertura, por_cobertura_cont),
~.>100)) %>%
select(ID, ano,
total, n_afil_tot, tasa_afiliacion,
cubiertos_tot, por_cobertura,
cubiertos_cont, por_cobertura_cont,
n_sind) %>% unique(.$ID)
data %>%
filter(if_any(c(tasa_afiliacion, por_cobertura, por_cobertura_cont),
~.>100)) %>%
select(ID) %>% unique
data %>%
filter(if_any(c(tasa_afiliacion, por_cobertura, por_cobertura_cont),
~.>100)) %>%
select(ID) %>% unique() %>% pull
data %>%
filter(ID %in% data %>%
filter(if_any(c(tasa_afiliacion, por_cobertura, por_cobertura_cont),
~.>100)) %>%
select(ID) %>% unique() %>% pull)
data %>%
filter(ID %in% data %>%
filter(if_any(c(tasa_afiliacion, por_cobertura, por_cobertura_cont),
~.>100)) %>%
select(ID) %>% unique() %>% pull())
ids=data %>%
filter(if_any(c(tasa_afiliacion, por_cobertura, por_cobertura_cont),
~.>100)) %>%
select(ID) %>% unique() %>% pull()
data %>%
filter(ID %in% ids)
data %>%
filter(ID %in% ids) %>%
select(ID, ano,
total, n_afil_tot, tasa_afiliacion,
cubiertos_tot, por_cobertura,
cubiertos_cont, por_cobertura_cont,
n_sind)
j=data %>%
filter(ID %in% ids) %>%
select(ID, ano,
total, n_afil_tot, tasa_afiliacion,
cubiertos_tot, por_cobertura,
cubiertos_cont, por_cobertura_cont,
n_sind)
View(j)
ids
hoja2 = read_xlsx("input/data/dt/1590_NC_y_Huelgas_2005_2023.xlsx",
sheet = "Cuadro 2", range = "B4:P15196",
na = "NULL") %>%
janitor::clean_names() %>%
select(rut_empresa, rsu,
cae_dt = cae_codigo,
ano = ano_escrutinio,
fecha = fecha_escrutinio,
trab_mas_h = trabajadores_hombres,
trab_fem_h = trabajadores_mujeres,
trab_tot_h = trabajadores,
tipo_org_h = tipo_org_sindical_y_grupo) %>% #Antes merge 15.192
merge(., llave, by = "rut_empresa", all.x = T)
