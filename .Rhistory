filter(!is.na(ID2))
nc_contrato = neg_col_dt %>%
group_by(rut_empresa, rsu, cae_dt, ano, trab_empresa_nc, tipo_inst, tipo_neg,
trab_mas_nc, trab_fem_nc, trab_tot_nc, codigoactividad, ID2) %>%
mutate(n = 1:n()) %>%
filter(n==1 & tipo_inst == "Contrato Colectivo") %>%
ungroup() %>%
group_by(ID2, ano) %>%
summarise(cubiertos_cont = sum(trab_tot_nc, na.rm = T),
cubiertos_cont_fem = sum(trab_fem_nc, na.rm = T),
cubiertos_cont_mas = sum(trab_mas_nc, na.rm = T)) %>%
filter(!is.na(ID2))
nc_otro = neg_col_dt %>%
group_by(rut_empresa, rsu, cae_dt, ano, trab_empresa_nc, tipo_inst, tipo_neg,
trab_mas_nc, trab_fem_nc, trab_tot_nc, codigoactividad, ID2) %>%
mutate(n = 1:n()) %>%
filter(n==1 & tipo_inst != "Contrato Colectivo") %>%
ungroup() %>%
group_by(ID2, ano) %>%
summarise(cubiertos_otro = sum(trab_tot_nc, na.rm = T),
cubiertos_otro_fem = sum(trab_fem_nc, na.rm = T),
cubiertos_otro_mas = sum(trab_mas_nc, na.rm = T)) %>%
filter(!is.na(ID2))
sind = ooss %>%
select(-c(cae_1d)) %>%
group_by(rsu, ano, rut_empresa) %>%
mutate(n = 1:n()) %>%
filter(n==1 & !tipo_org %in% c("Asociacion de funcionarios", "ASOCIACION DE FUNCIONARIOS")) %>%
ungroup() %>%
group_by(ID2, ano) %>%
filter(afil_tot < quantile(afil_tot, .98, na.rm=T)) %>%
summarise(n_sind = n(),
n_afil_tot = sum(afil_tot, na.rm = T),
n_afil_mas = sum(afil_mas, na.rm = T),
n_afil_fem = sum(afil_fem, na.rm = T),
mean_afil_tot = mean(afil_tot, na.rm = T),
mean_afil_mas = mean(afil_mas, na.rm = T),
mean_afil_fem = mean(afil_fem, na.rm = T),
por_dir_fem = round(sum(n_dir_mas<n_dir_tot, na.rm = T)/n()*100,3),
por_fed = round(sum(!is.na(rsu_fed))/n()*100, 3),
por_conf = round(sum(!is.na(rsu_conf))/n()*100, 3),
por_cen = round(sum(!is.na(rsu_cen))/n()*100, 3)) %>%
ungroup() %>%
mutate(ID2 = factor(ID2)) %>%
filter(!is.na(ID2))
data = list(nc, nc_contrato, nc_otro, h_nt, h_dur, sind) %>%
reduce(full_join, by = c("ID2", "ano"))
saveRDS(data, "output/data/data_dt_proc_final.rds")
rm(list=ls())
# Unificar data ENE - DT (OOSS-NC-H) --------------------------------------
# Cargar paquetes ---------------------------------------------------------
pacman::p_load(tidyverse, sjmisc, writexl)
# Cargar data -------------------------------------------------------------
dt = readRDS("output/data/data_dt_proc_final.rds")
ene = readRDS("output/data/ene_final_ID.rds") %>%
mutate(ID2 = factor(ID2),
ano = as.numeric(ano)) %>%
filter(!is.na(ID2))
olas = data.frame(ID2 = factor(rep(c(1:34), 14)),
ano = map(2010:2023, ~rep(.x, 34)) %>% unlist())
# Unificar ----------------------------------------------------------------
data = list(ene, dt) %>%
reduce(full_join, by = c("ID2", "ano")) %>%
merge(olas,
.,
by = c("ano", "ID2"), all = T) %>%
arrange(ano, ID2) %>%
filter(ano %in% 2010:2023 & ID2 != "34") %>%
mutate(across(total:por_cen,
~tidyr::replace_na(., 0)),
tasa_afiliacion = ifelse(if_all(c(n_afil_tot, total), ~.!=0), round((n_afil_tot/total)*100,3), 0),
por_cobertura = ifelse(if_all(c(cubiertos_tot, total), ~.!=0), round((cubiertos_tot/total)*100,3), 0),
por_cobertura_cont = ifelse(if_all(c(cubiertos_cont, total), ~.!=0), round((cubiertos_cont/total)*100,3), 0),
por_cobertura_otro = ifelse(if_all(c(cubiertos_otro, total), ~.!=0), round((cubiertos_otro/total)*100,3), 0),
n_sind_mil = ifelse(if_all(c(n_sind, total), ~.!=0), round((n_sind/(total/1000))*100,3), 0)) %>%
arrange(ID2, ano) %>%
#group_by(ID2, ano) %>%
mutate(across(c(tasa_afiliacion, por_cobertura, por_cobertura_cont, por_cobertura_otro),
~ifelse(ano %in% 2011:2023, dplyr::lag(.), 0),
.names = "lag_{.col}")) %>%
ungroup()
# Exportar ----------------------------------------------------------------
saveRDS(data,"output/data/data_dt_ene_final.rds")
# Explorar bugs -----------------------------------------------------------
#% mayores a 100
data %>%
summarise(across(c(tasa_afiliacion, por_cobertura, por_cobertura_cont),
~sum(. > 100)))
data %>%
filter(if_any(c(tasa_afiliacion, por_cobertura, por_cobertura_cont),
~.>100)) %>%
select(ID2, ano,
total, n_afil_tot, tasa_afiliacion,
cubiertos_tot, por_cobertura,
cubiertos_cont, por_cobertura_cont,
n_sind) %>%
write_xlsx("rev_porcentajes.xlsx")
ids=data %>%
filter(if_any(c(tasa_afiliacion, por_cobertura, por_cobertura_cont),
~.>100)) %>%
select(ID2) %>% unique() %>% pull()
j=data %>%
filter(ID2 %in% ids) %>%
select(ID2, ano,
total, n_afil_tot, tasa_afiliacion,
cubiertos_tot, por_cobertura,
cubiertos_cont, por_cobertura_cont,
n_sind)
View(j)
rm(list=ls())
# Rev datos DT - total ----------------------------------------------------
# Cargar paquetes ---------------------------------------------------------
pacman::p_load(tidyverse, sjmisc, readxl, data.table)
# Cargar data -------------------------------------------------------------
# llave = read_xlsx("input/data/dt/CAE_DT_armonizado.xlsx") %>%
#   select(ID, ID2) %>%
#   unique
# NC y Huelgas ------------------------------------------------------------
files = list.files("input/data/dt", pattern = ".rds")[2:4]
nc_h = map(files, ~readRDS(paste0("input/data/dt/", .x)) #%>% merge(., llave, by = "ID", all.x = T)
)
names(nc_h) = str_remove(files, pattern = ".rds$")
list2env(nc_h, globalenv())
rm(nc_h)
# OOSS --------------------------------------------------------------------
ooss = readRDS("input/data/dt/ooss.rds") #%>% merge(., llave,
#by = "ID", all.x = T)
# Estimaciones ------------------------------------------------------------
# NÃºmero de trabajadores --------------------------------------------------
h_nt = huelgas_ntrab_dt %>%
group_by(rut_empresa, rsu, cae_dt, ano, fecha, trab_mas_h, trab_fem_h,
trab_tot_h, tipo_org_h, codigoactividad, ID2) %>%
mutate(n = 1:n()) %>%
filter(n==1) %>%
ungroup() %>%
group_by(ID2, ano) %>%
summarise(n_huelgas = n(),
n_trab_huelga_tot = sum(trab_tot_h, na.rm = T),
n_trab_huelga_fem = sum(trab_fem_h, na.rm = T),
n_trab_huelga_mas = sum(trab_mas_h, na.rm = T),
mean_trab_huelga_tot = mean(trab_tot_h, na.rm = T),
mean_trab_huelga_fem = mean(trab_fem_h, na.rm = T),
mean_trab_huelga_mas = mean(trab_mas_h, na.rm = T)) %>%
filter(!is.na(ID2))
h_dur = huelgas_dur_dt %>%
group_by(rut_empresa, rsu, cae_dt, ano, fecha, dias_h, resultado_neg_h, trab_mas_h,
trab_fem_h, trab_tot_h, codigoactividad, ID2) %>%
mutate(n = 1:n()) %>%
filter(n==1) %>%
ungroup() %>%
group_by(ID2, ano) %>%
summarise(huelgas_dur = mean(dias_h, na.rm = T),
n_dptp = sum(trab_tot_h*dias_h),
mean_dptp = mean(trab_tot_h*dias_h)) %>%
filter(!is.na(ID2))
nc = neg_col_dt %>%
group_by(rut_empresa, rsu, cae_dt, ano, trab_empresa_nc, tipo_inst, tipo_neg,
trab_mas_nc, trab_fem_nc, trab_tot_nc, codigoactividad, ID2) %>%
mutate(n = 1:n()) %>%
filter(n==1) %>%
ungroup() %>%
group_by(ID2, ano) %>%
summarise(cubiertos_tot = sum(trab_tot_nc, na.rm = T),
cubiertos_fem = sum(trab_fem_nc, na.rm = T),
cubiertos_mas = sum(trab_mas_nc, na.rm = T)) %>%
filter(!is.na(ID2))
nc_contrato = neg_col_dt %>%
group_by(rut_empresa, rsu, cae_dt, ano, trab_empresa_nc, tipo_inst, tipo_neg,
trab_mas_nc, trab_fem_nc, trab_tot_nc, codigoactividad, ID2) %>%
mutate(n = 1:n()) %>%
filter(n==1 & tipo_inst == "Contrato Colectivo") %>%
ungroup() %>%
group_by(ID2, ano) %>%
summarise(cubiertos_cont = sum(trab_tot_nc, na.rm = T),
cubiertos_cont_fem = sum(trab_fem_nc, na.rm = T),
cubiertos_cont_mas = sum(trab_mas_nc, na.rm = T)) %>%
filter(!is.na(ID2))
nc_otro = neg_col_dt %>%
group_by(rut_empresa, rsu, cae_dt, ano, trab_empresa_nc, tipo_inst, tipo_neg,
trab_mas_nc, trab_fem_nc, trab_tot_nc, codigoactividad, ID2) %>%
mutate(n = 1:n()) %>%
filter(n==1 & tipo_inst != "Contrato Colectivo") %>%
ungroup() %>%
group_by(ID2, ano) %>%
summarise(cubiertos_otro = sum(trab_tot_nc, na.rm = T),
cubiertos_otro_fem = sum(trab_fem_nc, na.rm = T),
cubiertos_otro_mas = sum(trab_mas_nc, na.rm = T)) %>%
filter(!is.na(ID2))
sind = ooss %>%
select(-c(cae_1d)) %>%
group_by(rsu, ano, rut_empresa) %>%
mutate(n = 1:n()) %>%
filter(n==1 & !tipo_org %in% c("Asociacion de funcionarios", "ASOCIACION DE FUNCIONARIOS")) %>%
ungroup() %>%
group_by(ID2, ano) %>%
filter(afil_tot < quantile(afil_tot, .975, na.rm=T)) %>%
summarise(n_sind = n(),
n_afil_tot = sum(afil_tot, na.rm = T),
n_afil_mas = sum(afil_mas, na.rm = T),
n_afil_fem = sum(afil_fem, na.rm = T),
mean_afil_tot = mean(afil_tot, na.rm = T),
mean_afil_mas = mean(afil_mas, na.rm = T),
mean_afil_fem = mean(afil_fem, na.rm = T),
por_dir_fem = round(sum(n_dir_mas<n_dir_tot, na.rm = T)/n()*100,3),
por_fed = round(sum(!is.na(rsu_fed))/n()*100, 3),
por_conf = round(sum(!is.na(rsu_conf))/n()*100, 3),
por_cen = round(sum(!is.na(rsu_cen))/n()*100, 3)) %>%
ungroup() %>%
mutate(ID2 = factor(ID2)) %>%
filter(!is.na(ID2))
data = list(nc, nc_contrato, nc_otro, h_nt, h_dur, sind) %>%
reduce(full_join, by = c("ID2", "ano"))
saveRDS(data, "output/data/data_dt_proc_final.rds")
rm(list=ls())
# Unificar data ENE - DT (OOSS-NC-H) --------------------------------------
# Cargar paquetes ---------------------------------------------------------
pacman::p_load(tidyverse, sjmisc, writexl)
# Cargar data -------------------------------------------------------------
dt = readRDS("output/data/data_dt_proc_final.rds")
ene = readRDS("output/data/ene_final_ID.rds") %>%
mutate(ID2 = factor(ID2),
ano = as.numeric(ano)) %>%
filter(!is.na(ID2))
olas = data.frame(ID2 = factor(rep(c(1:34), 14)),
ano = map(2010:2023, ~rep(.x, 34)) %>% unlist())
# Unificar ----------------------------------------------------------------
data = list(ene, dt) %>%
reduce(full_join, by = c("ID2", "ano")) %>%
merge(olas,
.,
by = c("ano", "ID2"), all = T) %>%
arrange(ano, ID2) %>%
filter(ano %in% 2010:2023 & ID2 != "34") %>%
mutate(across(total:por_cen,
~tidyr::replace_na(., 0)),
tasa_afiliacion = ifelse(if_all(c(n_afil_tot, total), ~.!=0), round((n_afil_tot/total)*100,3), 0),
por_cobertura = ifelse(if_all(c(cubiertos_tot, total), ~.!=0), round((cubiertos_tot/total)*100,3), 0),
por_cobertura_cont = ifelse(if_all(c(cubiertos_cont, total), ~.!=0), round((cubiertos_cont/total)*100,3), 0),
por_cobertura_otro = ifelse(if_all(c(cubiertos_otro, total), ~.!=0), round((cubiertos_otro/total)*100,3), 0),
n_sind_mil = ifelse(if_all(c(n_sind, total), ~.!=0), round((n_sind/(total/1000))*100,3), 0)) %>%
arrange(ID2, ano) %>%
#group_by(ID2, ano) %>%
mutate(across(c(tasa_afiliacion, por_cobertura, por_cobertura_cont, por_cobertura_otro),
~ifelse(ano %in% 2011:2023, dplyr::lag(.), 0),
.names = "lag_{.col}")) %>%
ungroup()
# Exportar ----------------------------------------------------------------
saveRDS(data,"output/data/data_dt_ene_final.rds")
# Explorar bugs -----------------------------------------------------------
#% mayores a 100
data %>%
summarise(across(c(tasa_afiliacion, por_cobertura, por_cobertura_cont),
~sum(. > 100)))
data %>%
filter(if_any(c(tasa_afiliacion, por_cobertura, por_cobertura_cont),
~.>100)) %>%
select(ID2, ano,
total, n_afil_tot, tasa_afiliacion,
cubiertos_tot, por_cobertura,
cubiertos_cont, por_cobertura_cont,
n_sind) %>%
write_xlsx("rev_porcentajes.xlsx")
ids=data %>%
filter(if_any(c(tasa_afiliacion, por_cobertura, por_cobertura_cont),
~.>100)) %>%
select(ID2) %>% unique() %>% pull()
j=data %>%
filter(ID2 %in% ids) %>%
select(ID2, ano,
total, n_afil_tot, tasa_afiliacion,
cubiertos_tot, por_cobertura,
cubiertos_cont, por_cobertura_cont,
n_sind)
View(j)
View(data)
j=data %>%
#filter(ID2 %in% ids) %>%
select(ID2, ano,
total, n_afil_tot, tasa_afiliacion,
cubiertos_tot, por_cobertura,
cubiertos_cont, por_cobertura_cont,
n_sind)
View(j)
data %>%
filter(if_any(c(tasa_afiliacion, por_cobertura, por_cobertura_cont),
~.>100)) %>%
select(ID2, ano,
total, n_afil_tot, tasa_afiliacion,
cubiertos_tot, por_cobertura,
cubiertos_cont, por_cobertura_cont,
n_sind)
rm(list = ls())
# Descriptivos datos finales ENE DT ---------------------------------------
# Cargar paquetes ---------------------------------------------------------
pacman::p_load(tidyverse, readxl, writexl, sjmisc, RColorBrewer, sjPlot)
# Cargar datos ------------------------------------------------------------
llave = read_xlsx("CAE_DT_armonizado.xlsx") %>%
select(ID2, CAENES_1d) %>% unique
rm(list = ls())
# Descriptivos datos finales ENE DT ---------------------------------------
# Cargar paquetes ---------------------------------------------------------
pacman::p_load(tidyverse, readxl, writexl, sjmisc, RColorBrewer, sjPlot)
# Cargar datos ------------------------------------------------------------
llave = read_xlsx("input/data/dt/CAE_DT_armonizado.xlsx") %>%
select(ID2, CAENES_1d) %>% unique
data = readRDS("output/data/data_dt_ene_final.rds")
data = merge(data,
llave,
by = "ID2",
all.x = T) %>%
group_by(ano, ID2) %>%
mutate(n=1:n()) %>%
filter(n==1) %>%
ungroup() %>%
select(CAENES_1d, ID2, everything(), -n) %>%
mutate(across(c(CAENES_1d, ID2), ~factor(.)))
# Tabla descriptivos ------------------------------------------------------
a=data %>%
group_by(ID2) %>%
summarise(across(total:lag_por_cobertura_otro,
.fns = list(mean = mean,
n0 = ~sum(. == 0),
min = min,
q1 = ~quantile(., .25),
q2 = ~quantile(., .5),
q3 = ~quantile(., .75),
max = max))) %>%
merge(., llave, by = "ID2", all.x = T) %>%
select(CAENES_1d, ID2, everything()) %>%
arrange(CAENES_1d, ID2)
write_xlsx(a, "descriptivos_ID_seccion.xlsx")
write_xlsx(data %>%
group_by(ID2) %>%
summarise(across(c(n_huelgas,
n_trab_huelga_tot,
huelgas_dur,
tasa_afiliacion,
n_sind_mil,
por_cobertura,
por_cobertura_cont,
n_dptp,
mean_dptp),
.fns = list(mean = mean,
n0 = ~sum(. == 0),
min = min,
q1 = ~quantile(., .25),
q2 = ~quantile(., .5),
q3 = ~quantile(., .75),
max = max))) %>%
merge(., llave, by = "ID2", all.x = T) %>%
select(CAENES_1d, ID2, everything()) %>%
arrange(CAENES_1d, ID2),
"descriptivos_resumido_ID_seccion.xlsx")
list=split(data, data$CAENES_1d)
#NÃºmero de huelgas
imap(list,
~saveRDS(.x %>%
ggplot(aes(x = ano, y = n_huelgas, color = ID2)) +
geom_line() +
labs(title = "NÃºmero de huelgas por aÃ±o",
subtitle = .y,
x = "AÃ±o", y = "") +
scale_x_continuous(breaks = seq(2010, 2023, 1)) +
theme_bw(),
paste0("output/img/descriptivos_DT_ENE/n_huelgas", .y, ".rds"))
)
#NÃºmero de trabajadores en huelgas
imap(list,
~saveRDS(.x %>%
ggplot(aes(x = ano, y = n_trab_huelga_tot, color = ID2)) +
geom_line() +
labs(title = "NÃºmero de trabajadores en huelga por aÃ±o",
subtitle = .y,
x = "AÃ±o", y = "") +
scale_x_continuous(breaks = seq(2010, 2023, 1)) +
theme_bw(),
paste0("output/img/descriptivos_DT_ENE/n_trab_huelga_tot", .y, ".rds"))
)
#DuraciÃ³n promedio huelgas
imap(list,
~saveRDS(.x %>%
ggplot(aes(x = ano, y = huelgas_dur, color = ID2)) +
geom_line() +
labs(title = "DuraciÃ³n promedio huelgas por aÃ±o",
subtitle = .y,
x = "AÃ±o", y = "") +
scale_x_continuous(breaks = seq(2010, 2023, 1)) +
theme_bw(),
paste0("output/img/descriptivos_DT_ENE/huelgas_dur", .y, ".rds"))
)
#Tasa de afiliaciÃ³n sindical
imap(list,
~saveRDS(.x %>%
ggplot(aes(x = ano, y = tasa_afiliacion, color = ID2)) +
geom_line() +
labs(title = "Tasa de afiliaciÃ³n sindical por aÃ±o",
subtitle = .y,
x = "AÃ±o", y = "") +
scale_x_continuous(breaks = seq(2010, 2023, 1)) +
theme_bw(),
paste0("output/img/descriptivos_DT_ENE/tasa_afiliacion", .y, ".rds"))
)
#FragmentaciÃ³n sindical
imap(list,
~saveRDS(.x %>%
ggplot(aes(x = ano, y = n_sind_mil, color = ID2)) +
geom_line() +
labs(title = "NÃºmero de sindicatos por cada mil trab. por aÃ±o",
subtitle = .y,
x = "AÃ±o", y = "") +
scale_x_continuous(breaks = seq(2010, 2023, 1)) +
theme_bw(),
paste0("output/img/descriptivos_DT_ENE/n_sind_mil", .y, ".rds"))
)
#Cobertura neg. colectiva (total)
imap(list,
~saveRDS(.x %>%
ggplot(aes(x = ano, y = por_cobertura, color = ID2)) +
geom_line() +
labs(title = "% Cobertura neg. colectiva (total) por aÃ±o",
subtitle = .y,
x = "AÃ±o", y = "") +
scale_x_continuous(breaks = seq(2010, 2023, 1)) +
theme_bw(),
paste0("output/img/descriptivos_DT_ENE/por_cobertura", .y, ".rds"))
)
#Cobertura neg. colectiva (contratos)
imap(list,
~saveRDS(.x %>%
ggplot(aes(x = ano, y = por_cobertura_cont, color = ID2)) +
geom_line() +
labs(title = "% Cobertura neg. colectiva (contratos) por aÃ±o",
subtitle = .y,
x = "AÃ±o", y = "") +
scale_x_continuous(breaks = seq(2010, 2023, 1)) +
theme_bw(),
paste0("output/img/descriptivos_DT_ENE/por_cobertura_cont", .y, ".rds"))
)
# DÃ­as-persona de trabajo perdidos
imap(list,
~saveRDS(.x %>%
ggplot(aes(x = ano, y = n_dptp, color = ID2)) +
geom_line() +
labs(title = "DÃ­as-persona de trabajo perdidos (n) por aÃ±o",
subtitle = .y,
x = "AÃ±o", y = "") +
scale_x_continuous(breaks = seq(2010, 2023, 1)) +
theme_bw(),
paste0("output/img/descriptivos_DT_ENE/n_dptp", .y, ".rds"))
)
imap(list,
~saveRDS(.x %>%
ggplot(aes(x = ano, y = mean_dptp, color = ID2)) +
geom_line() +
labs(title = "DÃ­as-persona de trabajo perdidos (media) por aÃ±o",
subtitle = .y,
x = "AÃ±o", y = "") +
scale_x_continuous(breaks = seq(2010, 2023, 1)) +
theme_bw(),
paste0("output/img/descriptivos_DT_ENE/mean_dptp", .y, ".rds"))
)
llave = read_xlsx("input/data/dt/CAE_DT_armonizado.xlsx") %>%
select(ID2, CAENES_1d) %>% unique
data = readRDS("output/data/data_dt_ene_final.rds")
data = merge(data,
llave,
by = "ID2",
all.x = T) %>%
group_by(ano, ID2) %>%
mutate(n=1:n()) %>%
filter(n==1) %>%
ungroup() %>%
select(CAENES_1d, ID2, everything(), -n) %>%
mutate(across(c(CAENES_1d, ID2), ~factor(.)))
a=data %>%
group_by(ID2) %>%
summarise(across(total:lag_por_cobertura_otro,
.fns = list(mean = mean,
n0 = ~sum(. == 0),
min = min,
q1 = ~quantile(., .25),
q2 = ~quantile(., .5),
q3 = ~quantile(., .75),
max = max))) %>%
merge(., llave, by = "ID2", all.x = T) %>%
select(CAENES_1d, ID2, everything()) %>%
arrange(CAENES_1d, ID2)
write_xlsx(a, "descriptivos_ID_seccion.xlsx")
write_xlsx(data %>%
group_by(ID2) %>%
summarise(across(c(n_huelgas,
n_trab_huelga_tot,
huelgas_dur,
tasa_afiliacion,
n_sind_mil,
por_cobertura,
por_cobertura_cont,
n_dptp,
mean_dptp),
.fns = list(mean = mean,
n0 = ~sum(. == 0),
min = min,
q1 = ~quantile(., .25),
q2 = ~quantile(., .5),
q3 = ~quantile(., .75),
max = max))) %>%
merge(., llave, by = "ID2", all.x = T) %>%
select(CAENES_1d, ID2, everything()) %>%
arrange(CAENES_1d, ID2),
"descriptivos_resumido_ID_seccion.xlsx")
list=split(data, data$CAENES_1d)
pacman::p_load(rmarkdown)
