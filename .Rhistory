por_dir_fem = round(sum(n_dir_mas<n_dir_tot, na.rm = T)/n()*100,3),
por_fed = round(sum(!is.na(rsu_fed))/n()*100, 3),
por_conf = round(sum(!is.na(rsu_conf))/n()*100, 3),
por_cen = round(sum(!is.na(rsu_cen))/n()*100, 3)) %>%
ungroup() %>%
mutate(ID = factor(ID)) %>%
filter(!is.na(ID))
data = list(nc, nc_contrato, nc_otro, h_nt, h_dur, sind) %>%
reduce(full_join, by = c("ID", "ano"))
saveRDS(data, "output/data/data_dt_proc_final.rds")
rm(list=ls())
# Unificar data ENE - DT (OOSS-NC-H) --------------------------------------
# Cargar paquetes ---------------------------------------------------------
pacman::p_load(tidyverse, sjmisc, writexl)
# Cargar data -------------------------------------------------------------
dt = readRDS("output/data/data_dt_proc_final.rds")
ene = readRDS("output/data/ene_final_ID.rds") %>%
mutate(ID = factor(ID),
ano = as.numeric(ano)) %>%
filter(!is.na(ID) & ID != "Total")
olas = data.frame(ID = factor(rep(c(1:34), 14)),
ano = map(2010:2023, ~rep(.x, 34)) %>% unlist())
# Unificar ----------------------------------------------------------------
data = list(ene, dt) %>%
reduce(full_join, by = c("ID", "ano")) %>%
merge(olas,
.,
by = c("ano", "ID"), all = T) %>%
arrange(ano, ID) %>%
filter(ano %in% 2010:2023 & ID != "34") %>%
mutate(across(total:por_cen,
~tidyr::replace_na(., 0)),
tasa_afiliacion = ifelse(if_all(c(n_afil_tot, total), ~.!=0), round((n_afil_tot/total)*100,3), 0),
por_cobertura = ifelse(if_all(c(cubiertos_tot, total), ~.!=0), round((cubiertos_tot/total)*100,3), 0),
por_cobertura_cont = ifelse(if_all(c(cubiertos_cont, total), ~.!=0), round((cubiertos_cont/total)*100,3), 0),
por_cobertura_otro = ifelse(if_all(c(cubiertos_otro, total), ~.!=0), round((cubiertos_otro/total)*100,3), 0),
n_sind_mil = ifelse(if_all(c(n_sind, total), ~.!=0), round((n_sind/(total/1000))*100,3), 0)) %>%
arrange(ID, ano) %>%
#group_by(ID, ano) %>%
mutate(across(c(tasa_afiliacion, por_cobertura, por_cobertura_cont, por_cobertura_otro),
~ifelse(ano %in% 2011:2023, dplyr::lag(.), 0),
.names = "lag_{.col}")) %>%
ungroup()
# Exportar ----------------------------------------------------------------
saveRDS(data,"output/data/data_dt_ene_final.rds")
# Explorar bugs -----------------------------------------------------------
#% mayores a 100
data %>%
summarise(across(c(tasa_afiliacion, por_cobertura, por_cobertura_cont),
~sum(. > 100)))
data %>%
filter(if_any(c(tasa_afiliacion, por_cobertura, por_cobertura_cont),
~.>100)) %>%
select(ID, ano,
total, n_afil_tot, tasa_afiliacion,
cubiertos_tot, por_cobertura,
cubiertos_cont, por_cobertura_cont,
n_sind) %>%
write_xlsx("rev_porcentajes.xlsx")
ids=data %>%
filter(if_any(c(tasa_afiliacion, por_cobertura, por_cobertura_cont),
~.>100)) %>%
select(ID) %>% unique() %>% pull()
j=data %>%
filter(ID %in% ids) %>%
select(ID, ano,
total, n_afil_tot, tasa_afiliacion,
cubiertos_tot, por_cobertura,
cubiertos_cont, por_cobertura_cont,
n_sind)
View(j)
rm(list=ls())
# Rev datos DT - total ----------------------------------------------------
# Cargar paquetes ---------------------------------------------------------
pacman::p_load(tidyverse, sjmisc, readxl, data.table)
# Cargar data -------------------------------------------------------------
# llave = read_xlsx("input/data/dt/CAE_DT_armonizado.xlsx") %>%
#   select(ID, ID) %>%
#   unique
# NC y Huelgas ------------------------------------------------------------
files = list.files("input/data/dt", pattern = ".rds")[2:4]
nc_h = map(files, ~readRDS(paste0("input/data/dt/", .x)) #%>% merge(., llave, by = "ID", all.x = T)
)
names(nc_h) = str_remove(files, pattern = ".rds$")
list2env(nc_h, globalenv())
rm(nc_h)
# OOSS --------------------------------------------------------------------
ooss = readRDS("input/data/dt/ooss.rds") #%>% merge(., llave,
#by = "ID", all.x = T)
# Estimaciones ------------------------------------------------------------
# NÃºmero de trabajadores --------------------------------------------------
h_nt = huelgas_ntrab_dt %>%
group_by(rut_empresa, rsu, codigoactividad, ano, fecha, trab_mas_h, trab_fem_h,
trab_tot_h, tipo_org_h, codigoactividad_sii, ID) %>%
mutate(n = 1:n()) %>%
filter(n==1) %>%
ungroup() %>%
group_by(ID, ano) %>%
summarise(n_huelgas = n(),
n_trab_huelga_tot = sum(trab_tot_h, na.rm = T),
n_trab_huelga_fem = sum(trab_fem_h, na.rm = T),
n_trab_huelga_mas = sum(trab_mas_h, na.rm = T),
mean_trab_huelga_tot = mean(trab_tot_h, na.rm = T),
mean_trab_huelga_fem = mean(trab_fem_h, na.rm = T),
mean_trab_huelga_mas = mean(trab_mas_h, na.rm = T)) %>%
filter(!is.na(ID))
h_dur = huelgas_dur_dt %>%
group_by(rut_empresa, rsu, codigoactividad, ano, fecha, dias_h, resultado_neg_h, trab_mas_h,
trab_fem_h, trab_tot_h, codigoactividad_sii, ID) %>%
mutate(n = 1:n()) %>%
filter(n==1) %>%
ungroup() %>%
group_by(ID, ano) %>%
summarise(huelgas_dur = mean(dias_h, na.rm = T),
n_dptp = sum(trab_tot_h*dias_h),
mean_dptp = mean(trab_tot_h*dias_h)) %>%
filter(!is.na(ID))
nc = neg_col_dt %>%
group_by(rut_empresa, rsu, codigoactividad, ano, trab_empresa_nc, tipo_inst, tipo_neg,
trab_mas_nc, trab_fem_nc, trab_tot_nc, codigoactividad_sii, ID) %>%
mutate(n = 1:n()) %>%
filter(n==1) %>%
ungroup() %>%
group_by(ID, ano) %>%
filter(trab_tot_nc < quantile(trab_tot_nc, .99, na.rm=T)) %>%
summarise(cubiertos_tot = sum(trab_tot_nc, na.rm = T),
cubiertos_fem = sum(trab_fem_nc, na.rm = T),
cubiertos_mas = sum(trab_mas_nc, na.rm = T)) %>%
filter(!is.na(ID))
nc_contrato = neg_col_dt %>%
group_by(rut_empresa, rsu, codigoactividad, ano, trab_empresa_nc, tipo_inst, tipo_neg,
trab_mas_nc, trab_fem_nc, trab_tot_nc, codigoactividad_sii, ID) %>%
mutate(n = 1:n()) %>%
filter(n==1 & tipo_inst == "Contrato Colectivo") %>%
ungroup() %>%
group_by(ID, ano) %>%
filter(trab_tot_nc < quantile(trab_tot_nc, .99, na.rm=T)) %>%
summarise(cubiertos_cont = sum(trab_tot_nc, na.rm = T),
cubiertos_cont_fem = sum(trab_fem_nc, na.rm = T),
cubiertos_cont_mas = sum(trab_mas_nc, na.rm = T)) %>%
filter(!is.na(ID))
nc_otro = neg_col_dt %>%
group_by(rut_empresa, rsu, codigoactividad, ano, trab_empresa_nc, tipo_inst, tipo_neg,
trab_mas_nc, trab_fem_nc, trab_tot_nc, codigoactividad_sii, ID) %>%
mutate(n = 1:n()) %>%
filter(n==1 & tipo_inst != "Contrato Colectivo") %>%
ungroup() %>%
group_by(ID, ano) %>%
filter(trab_tot_nc < quantile(trab_tot_nc, .975, na.rm=T)) %>%
summarise(cubiertos_otro = sum(trab_tot_nc, na.rm = T),
cubiertos_otro_fem = sum(trab_fem_nc, na.rm = T),
cubiertos_otro_mas = sum(trab_mas_nc, na.rm = T)) %>%
filter(!is.na(ID))
sind = ooss %>%
select(-c(cae_1d)) %>%
group_by(rsu, ano, rut_empresa) %>%
mutate(n = 1:n()) %>%
filter(n==1 & !tipo_org %in% c("Asociacion de funcionarios", "ASOCIACION DE FUNCIONARIOS")) %>%
ungroup() %>%
group_by(ID, ano) %>%
filter(afil_tot <= quantile(afil_tot, .90, na.rm=T)) %>%
summarise(n_sind = n(),
n_afil_tot = sum(afil_tot, na.rm = T),
n_afil_mas = sum(afil_mas, na.rm = T),
n_afil_fem = sum(afil_fem, na.rm = T),
mean_afil_tot = mean(afil_tot, na.rm = T),
mean_afil_mas = mean(afil_mas, na.rm = T),
mean_afil_fem = mean(afil_fem, na.rm = T),
por_dir_fem = round(sum(n_dir_mas<n_dir_tot, na.rm = T)/n()*100,3),
por_fed = round(sum(!is.na(rsu_fed))/n()*100, 3),
por_conf = round(sum(!is.na(rsu_conf))/n()*100, 3),
por_cen = round(sum(!is.na(rsu_cen))/n()*100, 3)) %>%
ungroup() %>%
mutate(ID = factor(ID)) %>%
filter(!is.na(ID))
data = list(nc, nc_contrato, nc_otro, h_nt, h_dur, sind) %>%
reduce(full_join, by = c("ID", "ano"))
saveRDS(data, "output/data/data_dt_proc_final.rds")
rm(list=ls())
# Unificar data ENE - DT (OOSS-NC-H) --------------------------------------
# Cargar paquetes ---------------------------------------------------------
pacman::p_load(tidyverse, sjmisc, writexl)
# Cargar data -------------------------------------------------------------
dt = readRDS("output/data/data_dt_proc_final.rds")
ene = readRDS("output/data/ene_final_ID.rds") %>%
mutate(ID = factor(ID),
ano = as.numeric(ano)) %>%
filter(!is.na(ID) & ID != "Total")
olas = data.frame(ID = factor(rep(c(1:34), 14)),
ano = map(2010:2023, ~rep(.x, 34)) %>% unlist())
# Unificar ----------------------------------------------------------------
data = list(ene, dt) %>%
reduce(full_join, by = c("ID", "ano")) %>%
merge(olas,
.,
by = c("ano", "ID"), all = T) %>%
arrange(ano, ID) %>%
filter(ano %in% 2010:2023 & ID != "34") %>%
mutate(across(total:por_cen,
~tidyr::replace_na(., 0)),
tasa_afiliacion = ifelse(if_all(c(n_afil_tot, total), ~.!=0), round((n_afil_tot/total)*100,3), 0),
por_cobertura = ifelse(if_all(c(cubiertos_tot, total), ~.!=0), round((cubiertos_tot/total)*100,3), 0),
por_cobertura_cont = ifelse(if_all(c(cubiertos_cont, total), ~.!=0), round((cubiertos_cont/total)*100,3), 0),
por_cobertura_otro = ifelse(if_all(c(cubiertos_otro, total), ~.!=0), round((cubiertos_otro/total)*100,3), 0),
n_sind_mil = ifelse(if_all(c(n_sind, total), ~.!=0), round((n_sind/(total/1000))*100,3), 0)) %>%
arrange(ID, ano) %>%
#group_by(ID, ano) %>%
mutate(across(c(tasa_afiliacion, por_cobertura, por_cobertura_cont, por_cobertura_otro),
~ifelse(ano %in% 2011:2023, dplyr::lag(.), 0),
.names = "lag_{.col}")) %>%
ungroup()
# Exportar ----------------------------------------------------------------
saveRDS(data,"output/data/data_dt_ene_final.rds")
# Explorar bugs -----------------------------------------------------------
#% mayores a 100
data %>%
summarise(across(c(tasa_afiliacion, por_cobertura, por_cobertura_cont),
~sum(. > 100)))
data %>%
filter(if_any(c(tasa_afiliacion, por_cobertura, por_cobertura_cont),
~.>100)) %>%
select(ID, ano,
total, n_afil_tot, tasa_afiliacion,
cubiertos_tot, por_cobertura,
cubiertos_cont, por_cobertura_cont,
n_sind) %>%
write_xlsx("rev_porcentajes.xlsx")
ids=data %>%
filter(if_any(c(tasa_afiliacion, por_cobertura, por_cobertura_cont),
~.>100)) %>%
select(ID) %>% unique() %>% pull()
j=data %>%
filter(ID %in% ids) %>%
select(ID, ano,
total, n_afil_tot, tasa_afiliacion,
cubiertos_tot, por_cobertura,
cubiertos_cont, por_cobertura_cont,
n_sind)
View(j)
rm(list=ls())
# Unificar data ENE - DT (OOSS-NC-H) --------------------------------------
# Cargar paquetes ---------------------------------------------------------
pacman::p_load(tidyverse, sjmisc, writexl)
# Cargar data -------------------------------------------------------------
dt = readRDS("output/data/data_dt_proc_final.rds")
ene = readRDS("output/data/ene_final_ID.rds") %>%
mutate(ID = factor(ID),
ano = as.numeric(ano)) %>%
filter(!is.na(ID) & ID != "Total")
olas = data.frame(ID = factor(rep(c(1:43), 14)),
ano = map(2010:2023, ~rep(.x, 43)) %>% unlist())
# Unificar ----------------------------------------------------------------
data = list(ene, dt) %>%
reduce(full_join, by = c("ID", "ano")) %>%
merge(olas,
.,
by = c("ano", "ID"), all = T) %>%
arrange(ano, ID) %>%
filter(ano %in% 2010:2023 & ID != "43") %>%
mutate(across(total:por_cen,
~tidyr::replace_na(., 0)),
tasa_afiliacion = ifelse(if_all(c(n_afil_tot, total), ~.!=0), round((n_afil_tot/total)*100,3), 0),
por_cobertura = ifelse(if_all(c(cubiertos_tot, total), ~.!=0), round((cubiertos_tot/total)*100,3), 0),
por_cobertura_cont = ifelse(if_all(c(cubiertos_cont, total), ~.!=0), round((cubiertos_cont/total)*100,3), 0),
por_cobertura_otro = ifelse(if_all(c(cubiertos_otro, total), ~.!=0), round((cubiertos_otro/total)*100,3), 0),
n_sind_mil = ifelse(if_all(c(n_sind, total), ~.!=0), round((n_sind/(total/1000))*100,3), 0)) %>%
arrange(ID, ano) %>%
#group_by(ID, ano) %>%
mutate(across(c(tasa_afiliacion, por_cobertura, por_cobertura_cont, por_cobertura_otro),
~ifelse(ano %in% 2011:2023, dplyr::lag(.), 0),
.names = "lag_{.col}")) %>%
ungroup()
# Exportar ----------------------------------------------------------------
saveRDS(data,"output/data/data_dt_ene_final.rds")
# Explorar bugs -----------------------------------------------------------
#% mayores a 100
data %>%
summarise(across(c(tasa_afiliacion, por_cobertura, por_cobertura_cont),
~sum(. > 100)))
data %>%
filter(if_any(c(tasa_afiliacion, por_cobertura, por_cobertura_cont),
~.>100)) %>%
select(ID, ano,
total, n_afil_tot, tasa_afiliacion,
cubiertos_tot, por_cobertura,
cubiertos_cont, por_cobertura_cont,
n_sind) %>%
write_xlsx("rev_porcentajes.xlsx")
ids=data %>%
filter(if_any(c(tasa_afiliacion, por_cobertura, por_cobertura_cont),
~.>100)) %>%
select(ID) %>% unique() %>% pull()
j=data %>%
filter(ID %in% ids) %>%
select(ID, ano,
total, n_afil_tot, tasa_afiliacion,
cubiertos_tot, por_cobertura,
cubiertos_cont, por_cobertura_cont,
n_sind)
View(j)
View(data)
j=data %>%
#filter(ID %in% ids) %>%
select(ID, ano,
total, n_afil_tot, tasa_afiliacion,
cubiertos_tot, por_cobertura,
cubiertos_cont, por_cobertura_cont,
n_sind)
View(j)
lista = list(totales,
female,
age,
self_empl,
skills,
contract_duration,
tamano,
job_seniority,
contract_type#, unempl, cise
) %>%
Reduce(function(x,y) merge (x,y, all = T), .) %>%
arrange(ano, ID) %>%
rowwise() %>%
mutate(across(c(female, self_empl, skills, contract_duration,
firm_size, contract_type),
~ifelse(!is.na(.), round((./total)*100,3), NA))#, #unempl = ifelse(ID == "Total", round((unempl/total)*100,3), NA)
) %>%
ungroup() %>%
# arrange(ID, ano) %>%
# mutate(across(c(female, self_empl, skills, contract_duration,
#                 firm_size, job_seniority, contract_type, unempl),
#               ~lag(.),
#               .names = "lag_{.col}")) %>%
arrange(ano, ID) %>%
filter(ano != "1998")
View(j)
rm(list = ls())
# Procesamiento data OOSS --------------------------------------
# Cargar paquetes ---------------------------------------------------------
pacman::p_load(tidyverse, readxl, sjmisc)
# Cargar datos ------------------------------------------------------------
llave = readRDS("input/data/dt/CAE_RUT_FINAL.rds") %>%
select(rut_empresa = rut, dv, codigoactividad) %>%
mutate(across(c(rut_empresa, dv), ~as.character(.)),
codigoactividad = ifelse(nchar(codigoactividad) == 5,
str_extract(codigoactividad, "\\d{1}"),
str_extract(codigoactividad, "\\d{2}")),
rut_empresa = paste(rut_empresa, dv, sep = "-")) %>% #con duplicados: 3.482.146
group_by(rut_empresa) %>%
mutate(n = 1:n()) %>%
#ungroup() %>%
slice(which.min(n)) %>% #Sin duplicados: 1.617.697
ungroup() %>%
select(-dv, -n)
llave = merge(llave, read_xlsx("input/data/dt/CAE_DT_armonizado.xlsx") %>%
select(codigoactividad, ID),
by = "codigoactividad", all.x = T)
# a %>%
#   group_by(rut_empresa, codigoactividad) %>%
#   mutate(n = n()) %>%
#   ungroup() %>%
#   summarise(uniq = sum(n==1),
#             uniq_p = sum(n==1)/nrow(.)*100,
#             dup = sum(n>1),
#             dup_p = sum(n>1)/nrow(.)*100)
#
# a %>%
#   group_by(rut_empresa, ID) %>%
#   mutate(n = n()) %>%
#   ungroup() %>%
#   summarise(uniq = sum(n==1),
#             uniq_p = sum(n==1)/nrow(.)*100,
#             dup = sum(n>1),
#             dup_p = sum(n>1)/nrow(.)*100)
#
# a %>%
#   #group_by(rut_empresa) %>%
#   summarise(serv = sum(ID %in% 39:43, na.rm=T)/nrow(.))
files = list.files(path = "input/data/dt",
pattern = "1594")
#Microdatos
ooss_micro = map(files,
~ read_xlsx(paste0("input/data/dt/", .x),
na = c("SIN INFORMACIÃN", "NULL"),
guess_max = 23000) %>%
janitor::clean_names())
names(ooss_micro) = str_extract(files, pattern = "(OOSS_|COES_)\\d{4}")
ooss_micro = imap(ooss_micro,
~ .x %>%
mutate(anno = str_extract(.y, pattern = "\\d{4}$")))
ooss_micro$OOSS_2019 = ooss_micro$OOSS_2019 %>% #bind_rows() %>%
mutate(tipo_de_organizacion_sindical_de_base2 = ifelse(tipo_de_organizacion_sindical_de_base == "ASOCIACION DE FUNCIONARIOS",
"ASOCIACION DE FUNCIONARIOS", socios_hombres),
socios_hombres2 = as.numeric(ifelse(tipo_de_organizacion_sindical_de_base == "ASOCIACION DE FUNCIONARIOS",
socios_hombres, tipo_de_organizacion_sindical_de_base))) %>%
select(ano:region_de_la_ooss_de_base,
tipo_de_organizacion_sindical_de_base = tipo_de_organizacion_sindical_de_base2,
socios_hombres = socios_hombres2,
socias_mujeres:anno)
ooss_micro$OOSS_2020 = ooss_micro$OOSS_2020 %>% #bind_rows() %>%
mutate(codigo_rae_sirela = as.numeric(codigo_rae_sirela))
# a=ooss_micro["OOSS_2019"] %>% bind_rows() %>%
#   mutate(tipo_de_organizacion_sindical_de_base2 = ifelse(tipo_de_organizacion_sindical_de_base == "ASOCIACION DE FUNCIONARIOS", "ASOCIACION DE FUNCIONARIOS", socios_hombres),
#          socios_hombres2 = ifelse(tipo_de_organizacion_sindical_de_base == "ASOCIACION DE FUNCIONARIOS", socios_hombres, tipo_de_organizacion_sindical_de_base)) %>%
#   select(ano:region_de_la_ooss_de_base,
#          tipo_de_organizacion_sindical_de_base = tipo_de_organizacion_sindical_de_base2,
#          socios_hombres = socios_hombres2,
#          socias_mujeres:anno)
ooss_micro23 = ooss_micro[[8]] %>%
select(rut_empresa, dv, ano,
rsu = rsu_organizacion_sindical_de_base,
cae_1d = codigo_rae_sirela,
trab_tot_emp = cantidad_de_trabajadores_en_la_empresa_afc,
tamano_emp = tamano_empresa_afc,
region = region_de_la_ooss_de_base,
tipo_org = tipo_de_organizacion_sindical_de_base,
afil_mas = socios_hombres,
afil_fem = socias_mujeres,
afil_tot = total_socios,
n_dir_mas = n_de_dirigentes_hombres,
n_dir_fem = n_de_dirigentas_mujeres,
n_dir_tot = n_total_dirigentes,
rsu_fed = rsu_federacion_rsu_fed,
rsu_cen = rsu_central_sindical_rsu_cent,
rsu_conf = rsu_confederacion_rsu_confed
) %>%
mutate(rut_empresa = paste(rut_empresa, dv, sep = "-")) %>%
dplyr::select(-dv) %>%
merge(., llave, by = "rut_empresa", all.x = T)
ooss_micro = bind_rows(ooss_micro[-8]) %>%
select(rut_empresa, dv, ano,
rsu = rsu_organizacion_sindical_de_base,
cae_1d = codigo_rae_sirela,
trab_tot_emp = cantidad_de_trabajadores_en_la_empresa_afc,
tamano_emp = tamano_empresa_afc,
region = region_de_la_ooss_de_base,
tipo_org = tipo_de_organizacion_sindical_de_base,
afil_mas = socios_hombres,
afil_fem = socias_mujeres,
afil_tot = total_socios,
n_dir_mas = n_de_dirigentes_hombres,
n_dir_fem = n_de_dirigentas_mujeres,
n_dir_tot = n_total_dirigentes)
ooss_micro = ooss_micro %>% #sin merge 168.908
mutate(rut_empresa = paste(rut_empresa, dv, sep = "-")) %>%
select(-dv) %>%
merge(., llave, by = "rut_empresa", all.x = T)
a = ooss_micro %>% filter(ano = 2019)
a = ooss_micro %>% filter(ano == 2019)
View(a)
a = ooss_micro %>% filter(ano == 2019 & !is.na(ID))
View(a)
rm(list=ls())
# Unificar data ENE - DT (OOSS-NC-H) --------------------------------------
# Cargar paquetes ---------------------------------------------------------
pacman::p_load(tidyverse, sjmisc, writexl)
# Cargar data -------------------------------------------------------------
dt = readRDS("output/data/data_dt_proc_final.rds")
ene = readRDS("output/data/ene_final_ID.rds") %>%
mutate(ID = factor(ID),
ano = as.numeric(ano)) %>%
filter(!is.na(ID) & ID != "Total")
olas = data.frame(ID = factor(rep(c(1:42), 14)),
ano = map(2010:2023, ~rep(.x, 42)) %>% unlist())
# Unificar ----------------------------------------------------------------
data = list(ene, dt) %>%
reduce(full_join, by = c("ID", "ano")) %>%
merge(olas,
.,
by = c("ano", "ID"), all = T) %>%
arrange(ano, ID) %>%
filter(ano %in% 2010:2023 & ID != "42") %>%
mutate(across(total:por_cen,
~tidyr::replace_na(., 0)),
tasa_afiliacion = ifelse(if_all(c(n_afil_tot, total), ~.!=0), round((n_afil_tot/total)*100,3), 0),
por_cobertura = ifelse(if_all(c(cubiertos_tot, total), ~.!=0), round((cubiertos_tot/total)*100,3), 0),
por_cobertura_cont = ifelse(if_all(c(cubiertos_cont, total), ~.!=0), round((cubiertos_cont/total)*100,3), 0),
por_cobertura_otro = ifelse(if_all(c(cubiertos_otro, total), ~.!=0), round((cubiertos_otro/total)*100,3), 0),
n_sind_mil = ifelse(if_all(c(n_sind, total), ~.!=0), round((n_sind/(total/1000))*100,3), 0)) %>%
arrange(ID, ano) %>%
#group_by(ID, ano) %>%
mutate(across(c(tasa_afiliacion, por_cobertura, por_cobertura_cont, por_cobertura_otro),
~ifelse(ano %in% 2011:2023, dplyr::lag(.), 0),
.names = "lag_{.col}")) %>%
ungroup()
# Exportar ----------------------------------------------------------------
saveRDS(data,"output/data/data_dt_ene_final.rds")
# Explorar bugs -----------------------------------------------------------
#% mayores a 100
data %>%
summarise(across(c(tasa_afiliacion, por_cobertura, por_cobertura_cont),
~sum(. > 100)))
data %>%
filter(if_any(c(tasa_afiliacion, por_cobertura, por_cobertura_cont),
~.>100)) %>%
select(ID, ano,
total, n_afil_tot, tasa_afiliacion,
cubiertos_tot, por_cobertura,
cubiertos_cont, por_cobertura_cont,
n_sind) %>%
write_xlsx("rev_porcentajes.xlsx")
ids=data %>%
filter(if_any(c(tasa_afiliacion, por_cobertura, por_cobertura_cont),
~.>100)) %>%
select(ID) %>% unique() %>% pull()
j=data %>%
#filter(ID %in% ids) %>%
select(ID, ano,
total, n_afil_tot, tasa_afiliacion,
cubiertos_tot, por_cobertura,
cubiertos_cont, por_cobertura_cont,
n_sind)
View(j)
